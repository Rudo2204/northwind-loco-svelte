//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.7

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "Order Details")]
pub struct Model {
    pub orderid: i64,
    pub productid: i64,
    pub unitprice: Option<Decimal>,
    pub quantity: Option<i64>,
    #[sea_orm(column_type = "Float", nullable)]
    pub discount: Option<f32>,
    #[sea_orm(primary_key)]
    pub id: i32,
    pub created_at: DateTimeWithTimeZone,
    pub updated_at: DateTimeWithTimeZone,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::orders::Entity",
        from = "Column::Orderid",
        to = "super::orders::Column::Orderid",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Orders,
    #[sea_orm(
        belongs_to = "super::products::Entity",
        from = "Column::Productid",
        to = "super::products::Column::Productid",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Products,
}

impl Related<super::orders::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Orders.def()
    }
}

impl Related<super::products::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Products.def()
    }
}
